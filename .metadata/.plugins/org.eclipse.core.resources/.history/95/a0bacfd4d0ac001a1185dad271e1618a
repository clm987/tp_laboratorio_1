#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Employee.h"
#include "IOdata.h"

//***********************************

Employee* employee_new()
{
	Employee* this = (Employee*) malloc(sizeof(Employee));
	if(this != NULL)
	{
		this->id = 0;
		strcpy(this->nombre,"");
		this->horasTrabajadas = 0;
		this->sueldo = 0;

	}
	return this;
}

//**********************************
int EmployeeAdd(Employee* this)
{
	int retCode = -1;
	char bufferNombre[LENGTH];
	int bufferHoras = 0;
	int bufferId = 0;
	int bufferSalario = 0;


	this = employee_new();

	getAlphaString(bufferNombre, "\nIngrese el nomnbre del empleado: ", "Error. Intente nuevamente");
	getNaturalNumber(&bufferHoras,"\nIngrese el numero de horas: ", "Error debe ingresar solo numeros",3);
	getNaturalNumber(&bufferSalario,"\nIngrese el salario: ", "Error debe ingresar solo numeros",3);
	bufferId = generateIdeEmployee();

	if(bufferNombre != NULL && bufferHoras != -1 && bufferSalario != -1 && bufferId >= 1)
	{
		employee_setNombre(this,bufferNombre);
		employee_setHorasTrabajadas(this, bufferHoras);
		employee_setSueldo(this, bufferSalario);
		employee_setId(this, bufferId);
		printf("\n EL EMPLEADO CARGADO FUE: ");
		printf("\n ID %d \t NOMBRE %s \t HORAS %d \t SALARIO %d", this->id, this->nombre, this->horasTrabajadas, this->sueldo);

		retCode = 0;
	}
	return retCode;
}
//***********************************

int generateIdeEmployee()
{
    static int id=1;

    return id++;
}

//*************************************
//*


Employee* employee_newParametros(char* idStr,char* nombreStr,char* horasTrabajadasStr, char* sueldoStr)
{
Employee* this;

	this = employee_new();

	if(this != NULL)
	{
		employee_setNombre(this, nombreStr);
		employee_setHorasTrabajadas(this,atoi(horasTrabajadasStr));
		employee_setSueldo(this, atoi(sueldoStr));
		employee_setId(this, atoi(idStr));
	}
return this;
}

//***************************************
int employee_setNombre(Employee* this,char* nombre)
{
	int retCode = -1;
	if(this != NULL && nombre != NULL)
		{
				retCode = 0;
				strncpy(this->nombre,nombre,LENGTH);
		}
	return retCode;
}

//***************************************
int employee_setHorasTrabajadas(Employee* this, int horasTrabajadas)
{
	int retCode = -1;
	if(this != NULL && horasTrabajadas >= 0)
	{
		retCode = 0;
		this->horasTrabajadas = horasTrabajadas;
	}
	return retCode;
}

//********************************************
int employee_setSueldo(Employee* this,int sueldo)
{
	int retCode = -1;
	if(this != NULL && sueldo >= 0)
	{
		retCode = 0;
		this->sueldo = sueldo;
	}
	return retCode;
}

//*********************************************
int employee_setId(Employee* this,int id)
{
	int retCode = -1;
	if(this != NULL && id > 0)
	{
		retCode = 0;
		this->id = id;
	}
	return retCode;
}

//********************************************

int employee_getId(Employee* this,int* id)
{
    int retCode=-1;
    if(this!=NULL)
    {
        *id=this->id;
        retCode=0;
    }
    return retCode;
}

//********************************************
int employee_getNombre(Employee* this,char* nombre)
{
    int retCode=-1;
    if(this!=NULL && nombre!=NULL)
    {
        strcpy(nombre,this->nombre);
        retCode=0;
    }
    return retCode;
}

//*******************************************
int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas)
{
    int retCode=-1;
    if(this!=NULL)
    {
        *horasTrabajadas=this->horasTrabajadas;
        retCode=0;
    }
    return retCode;
}

//*******************************************
int employee_getSueldo(Employee* this,int* sueldo)
{
    int retCode=-1;
    if(this!=NULL)
    {
        *sueldo=this->sueldo;
        retCode=0;
    }
    return retCode;
}

//*******************************************
int getEmployee(int* id, char* nombre, int* horasTrabajadas, int* sueldo, Employee* this)
{
	int retCode = -1;

		if(id != NULL && nombre != NULL && horasTrabajadas != NULL && sueldo!= NULL && this != NULL)
		{
			employee_getId(this,id);
			employee_getNombre(this,nombre);
			employee_getSueldo(this,sueldo);
			employee_getHorasTrabajadas(this,horasTrabajadas);
		}


	return retCode;
}


