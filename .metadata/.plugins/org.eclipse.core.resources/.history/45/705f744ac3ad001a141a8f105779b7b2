#ifndef employee_H_INCLUDED
#define employee_H_INCLUDED
#define LENGTH 128
typedef struct
{
    int id;
    char nombre[128];
    int horasTrabajadas;
    int sueldo;
}Employee;

Employee* employee_new();
Employee* employee_newParametros(char* idStr,char* nombreStr,char* horasTrabajadasStr, char* sueldoStr);
void employee_delete();

int employee_setId(Employee* this,int id);
int employee_setIdTxt(Employee* this,char* id);
int employee_getId(Employee* this,int* id);

int employee_setNombre(Employee* this,char* nombre);
int employee_getNombre(Employee* this,char* nombre);

int employee_setHorasTrabajadas(Employee* this,int horasTrabajadas);
int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas);

int employee_setSueldo(Employee* this,int sueldo);
int employee_getSueldo(Employee* this,int* sueldo);


int EmployeeAdd(Employee* this, LinkedList* pArrayListEmployee);
int getEmployee(int* id, char* nombre, int* horasTrabajadas, int* sueldo, Employee* this);
//int setEmployee(int id, char nombre, int horasTrabajadas, int sueldo, Employee* this);
int printEmployee(Employee* this);
int searchId(int id, LinkedList* lista);
int generateIdeEmployee(LinkedList* pArrayListEmployee);
int listEmployees(LinkedList* pArrayListEmployee, int length);
int sortByHours(void* genericField1, void* genericfield2);
int sortBySalary(void* genericField1, void* genericfield2);


#endif // employee_H_INCLUDED
